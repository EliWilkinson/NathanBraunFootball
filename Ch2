'''
#Chapter 2
Python

Convention = what most programmers do in a certain syntax

Ex: convention in python to name variables is to use all_lowercase_and_separate_w_underscores
convention in JavaScript is to use CapitalAndLowercaseNoSpaces

f strings are the easiest way to insert variables into strings

Spyder does not take strings well
foo = 'tom brady' ----> foo.captalize() ----> Tom brady
foo.capitalize? returns a definition of what the function does

foo, bar, and baz are throwaway variables that have been used since the 50s
---------------
Page 29
Lists and dicts

Lists hold ordered information
  -lists can hold anything, including other lists (aka nested lists)

pg 30
unpacking- assigning values to multiple variables at once
         - not used too frequently
         -SHORTER CODE IS NOT ALWAYS BETTER
         -easier to read by assigning on separate lines

Comprehensions= way to modify lists or dicts with not a lot of code 
              - like loops condensed onto one line
              
All list comprehensions take the form of [a for b in c]
  -pg 34 (pg 40 in sidebar) 
  -the last two are easy: c is the whole list: my_roster_list and b is full_name
   - a is trickier: full_name.split('')[1]

Can use dicts in comprehension too
  - only way to access value of a dict is by .items()
  -for _, lets programmers know we're not using that variable

pg 39 of book(45 in sidebar)
using default values
def rec_pts_wdefault(rec=0, yds=0, tds=0):

This next page could be good for FanDuel vs DarftKings
  -shows how to change scoring system

Anonymous or lambda functions allow for more flexibility

pg 43
os Library and path
  - answers question I had earlier in my head
  
End of Ch 2 Exercises notes

2.1
- programmers begin with '_' on a varibale if it is temporary
-can't start a variable with a number
-can't start with @ either, can only start with letter or _

2.3
def for_the_td(player1, player2):
  return f'{player1} to {player2} for the td!"

2.5
def is_leveon(player):
  if player.replace(" ' ", "").lower() == leveon bell:
    return True

Exercise not easy... end of Ch2
'''
